name: bumping version

on:
  workflow_call:
    inputs:
      project_root_path:
        required: true
        type: string
      project_name:
        required: true
        type: string
    outputs:
      NEW_VERSION:
        value: ${{ jobs.bumping_and_push-tag.outputs.NEW_VERSION }}
    secrets:
      CI_BOT_GITHUB_TOKEN:
        required: true

jobs:
  bumping_and_push-tag:
    runs-on: ubuntu-20.04
    outputs:
      LAST_TAG: ${{ steps.save-last-tag.outputs.lastTag }}
      NEW_VERSION: ${{ steps.change_file.outputs.NEW_VERSION }}

    strategy:
      matrix:
        node-version: [14.x]

    name: bumping version commit
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.CI_BOT_GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          # releases-only: false  # This repository doesn't use GitHub's "release" feature.
          regex: "^${{ inputs.project_name }}/"
        id: tagger
        continue-on-error: true

      - id: save-last-tag
        run: |
          if [ "${{ steps.tagger.outcome }}" != "success" ]
          then
            echo "LAST_TAG=${{ inputs.project_name }}/0.0.0" >> $GITHUB_ENV
          else
            echo "LAST_TAG=${{ steps.tagger.outputs.tag }}" >> $GITHUB_ENV
          fi
          echo "::set-output name=lastTag::${LAST_TAG}"

      - id: change_file
        run: |
          pr_title=````
          ${{ github.event.head_commit.message }}
          ````
          
          echo $pr_title

          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          
          chmod +x ./scripts/version-util/workflow_running.sh
          new_version=$(bash ./scripts/version-util/workflow_running.sh -p ${pr_title} -r ${{ inputs.project_root_path }} -n ${{ inputs.project_name }} -t ${{ env.LAST_TAG }})
          echo "${new_version}"
          echo "::set-output name=NEW_VERSION::${new_version}"
        env:
          GITHUB_TOKEN: ${{ secrets.CI_BOT_GITHUB_TOKEN }}

